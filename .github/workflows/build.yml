name: Flutter Build and Release
on:
  push:
    tags:
      - 'v*'
permissions:
  contents: write
jobs:
  build:
    name: Build Flutter APK
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.27.0
      - name: Check Flutter and Dart versions
        run: |
          flutter --version
          dart --version
      - name: Install dependencies
        run: flutter pub get
      - name: Build APK
        run: flutter build apk --release
      - name: Rename APK with version
        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/nic-app-${{ github.ref_name }}.apk
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/nic-app-${{ github.ref_name }}.apk
  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release-apk
          path: release-assets/
      - name: Create changelog text
        id: changelog
        uses: loopwerk/tag-changelog@v1
        with:
          token: ${{ secrets.PAT_FOR_NIC_DEC }}
          config_file: .github/tag-changelog-config.js
      - name: Prepend changelog to CHANGELOG.md
        run: |
          echo "Generated Changelog:"
          echo "${{ steps.changelog.outputs.changelog }}"
          echo "--------------------"

          echo -e "${{ steps.changelog.outputs.changelog }}\n\n$(cat CHANGELOG.md)" > CHANGELOG.md

          echo "Updated CHANGELOG.md content:"
          cat CHANGELOG.md
      - name: Commit and push updated CHANGELOG.md
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Fetch all branches to avoid detached HEAD issue
          git fetch --all

          # Determine the default branch dynamically
          DEFAULT_BRANCH=$(git remote show origin | awk '/HEAD branch/ {print $NF}')
          echo "Default branch detected: $DEFAULT_BRANCH"

          # Checkout the default branch and pull latest changes
          git checkout $DEFAULT_BRANCH || git checkout -b $DEFAULT_BRANCH
          git pull origin $DEFAULT_BRANCH || echo "No remote updates"

          echo "Git status before commit:"
          git status

          git add CHANGELOG.md
          git commit -m "Update CHANGELOG for ${{ env.TAG_NAME }}" || echo "No changes to commit"
          git push origin $DEFAULT_BRANCH || echo "No changes to push"

          echo "Git log after commit:"
          git log --oneline -n 5
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: ${{ steps.changelog.outputs.changes }}
          files: |
            release-assets/nic-app-${{ github.ref_name }}.apk
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_FOR_NIC_DEC }}
